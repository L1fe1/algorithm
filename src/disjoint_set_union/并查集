定义：
1. 有若干个样本 a、b、c、d… 类型假设是 V
2. 在并查集中一开始认为每个样本都在单独的集合里
3. 用户可以在任何时候调用如下两个方法：
    - boolean isSameSet(V x, V y) : 查询样本 x 和样本 y 是否属于一个集合
    - void union(V x, V y) : 把 x 和 y 各自所在集合的所有样本合并成一个集合
4. isSameSet 和 union 方法的代价越低越好

设计思路：
1. 每个节点都有一条往上指的指针
2. 节点 a 往上找到的头节点，叫做 a 所在集合的代表节点
3. 查询 x 和 y 是否属于同一个集合，就是看看找到的代表节点是不是一个
4. 把 x 和 y 各自所在集合的所有节点合并成一个集合，只需要小集合的代表点挂在大集合的代表点的下方即可

优化：
1. 节点往上找代表点的过程，把沿途的链变成扁平的
2. 小集合挂在大集合的下面
3. 如果方法调用很频繁，那么单次调用的代价为 O(1)，两个方法都如此

应用:
1. 解决两大块区域的合并问题
2. 常用在图等领域中